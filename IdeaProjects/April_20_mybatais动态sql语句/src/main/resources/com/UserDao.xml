<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="dao.UserDao"> <!--UserDao路径-->
    <!--查询所有用户-->
    <select id="findAll" resultType="domain.User">/*resultype 对应实体类路径*/
        select *from user ;
    </select>

    <!--根据id查询用户-->
    <select id="findById" parameterType="int" resultType="domain.User">/*resultType返回值是User类型，把结果封装到domain.User*/
        select *from user where id=#{id};
    </select>

    <!--根据名称模糊查询用户-->
    <select id="findByName" parameterType="string" resultType="domain.User">/*resultType返回值是User类型，把结果封装到domain.User*/
        select *from user where username like #{name};
    </select>

    <!--此处user即为domain.Query里的属性（User user）即user对象，user.username即user对象的username属性，对应数据表username属性-->
    <!-- 根据queryVo条件查询用户-->
    <select id="findUserByVo" parameterType="domain.QueryVo" resultType="domain.User">
        select *from user where username like #{user.username};
    </select>

    <!--根据条件查询 用if标签  注：username,#{username}对应实体类中的属性;and username 此处username对应数据表中的属性
    <select id="findUserByCondition" parameterType="domain.User" resultType="domain.User">
        select *from user where 1=1
        <if test="username !=null">
          and username= #{username}
        </if>
        <if test="sex !=null">
            and sex= #{sex}
        </if>
    </select>
       或者用where标签 注：username,#{username}对应实体类中的属性;and username 此处username对应数据表中的属性-->
    <select id="findUserByCondition" parameterType="domain.User" resultType="domain.User">
        select *from user
        <where>
            <if test="username !=null">
                and username= #{username}
            </if>
            <if test="sex !=null">
                and sex= #{sex} ;
            </if>
        </where>
    </select>

    <!--parameterType传入参数类型-->
    <!--根据queryVo中提供的id集合（如id 1,2,5,6,9）遍历查询这些id的用户信息 sql语句：select *from user where id={1,2,3,5} ;-->
    <select id="findUserInIds" parameterType="domain.QueryVo" resultType="domain.User">
        select *from user
        <where >
            <if test="ids !=null and ids.size() >0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>