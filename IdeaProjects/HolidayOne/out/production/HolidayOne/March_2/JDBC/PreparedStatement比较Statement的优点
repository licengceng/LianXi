 PreparedStatement的优点1-参数设置 :
        tatement 需要进行字符串拼接，可读性和维护性比较差
        String sql = "insert into hero values(null,"+"'提莫'"+","+313.0f+","+50+")";
        PreparedStatement 使用参数设置，可读性好，不易犯错
        String sql = "insert into hero values(null,?,?,?)";
 PreparedStatement的优点2-性能表现 :
        PreparedStatement有预编译机制，性能比Statement更快
  PreparedStatement的优点3-防止SQL注入式攻击
      假设name是用户提交来的数据
      String name = "'盖伦' OR 1=1";
      使用Statement就需要进行字符串拼接
      拼接出来的语句是：
      select * from hero where name = '盖伦' OR 1=1
      因为有OR 1=1，这是恒成立的
      那么就会把所有的英雄都查出来，而不只是盖伦
      如果Hero表里的数据是海量的，比如几百万条，把这个表里的数据全部查出来
      会让数据库负载变高，CPU100%，内存消耗光，响应变得极其缓慢
      而PreparedStatement使用的是参数设置，就不会有这个问题
---------------------------------------------------------------------------------------------------------
      public class TestJDBC {
          public static void main(String[] args) {
              try {
                  Class.forName("com.mysql.jdbc.Driver");
              } catch (ClassNotFoundException e) {
                  e.printStackTrace();
              }

              int count = 1000;
              long start = System.currentTimeMillis();
              insertByPreparedStatment(count);
              long end = System.currentTimeMillis();
              System.out.printf("使用预编译Statement插入%d条数据，耗时: %d毫秒%n", count, end - start);

              start = System.currentTimeMillis();
              insertStatment(count);
              end = System.currentTimeMillis();
              System.out.printf("使用Statement插入%d条数据，耗时: %d 毫秒%n", count, end - start);

          }

          private static void insertByPreparedStatment(int count) {
              String sql = "insert into hero values(null,?,?,?)";
              try (Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/how2java?characterEncoding=UTF-8",
                      "root", "admin");
                  PreparedStatement ps = c.prepareStatement(sql);) {
                  for (int i = 0; i < count; i++) {
                      ps.setString(1, "提莫");
                      ps.setFloat(2, 313.0f);
                      ps.setInt(3, 50);
                      ps.execute();
                  }

              } catch (SQLException e) {
                  e.printStackTrace();
              }
          }

          private static void insertStatment(int count) {
              try (Connection c = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/how2java?characterEncoding=UTF-8",
                      "root", "admin");
                      Statement s = c.createStatement();) {
                  for (int i = 0; i < count; i++) {
                      String sql = "insert into hero values(null," + "'提莫'" + "," + i + "," + i + ")";
                      s.execute(sql);
                  }
              } catch (SQLException e) {
                  e.printStackTrace();
              }
          }
      }