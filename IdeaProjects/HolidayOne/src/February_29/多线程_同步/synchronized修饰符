 synchronized(object){
    //只有占有object对象，才能执行该块内的代码
 }

 
 final Object someObject = new Object();
 final Hero gareen = new Hero();
 for (int i = 0; i < n; i++) {
             Thread t = new Thread(){
                 public void run(){
                     //任何线程要修改hp的值，必须先占用someObject,否則無法改变调用gareen的方法改变血量
                     synchronized (someObject) {
                         gareen.recover();
                     }
                     try {
                         Thread.sleep(100);
                     } catch (InterruptedException e) {
                         e.printStackTrace();
                     }
                 }bian
             };
             t.start();
             addThreads[i] = t;
 
         }