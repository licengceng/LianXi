<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="dao.UserDao"> <!--UserDao路径-->
    <!--查询所有用户-->
    <select id="findAll" resultType="domain.User">/*resultype 对应实体类路径*/
        select *from user ;
    </select>

    <!--保存用户-->    <!--parameterType输入类型 即#{username},#{birthday},#{sex},#{address}里的属性为domain.User里的属性-->
    <insert id="saveUser" parameterType="domain.User">
        <!--配置插入操作后（AFTER），再获取插入数据的id  keyProperty对应实体类属性，keyColumn对应数据表的属性 -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address});
    </insert>

    <!--#{username},#{name} 是占位符，里面名称可以随意写-->
    <!--更改信息-->
    <update id="updateUser" parameterType="domain.User">
        update user set username=#{username},address=#{address},birthday=#{birthday},sex=#{sex} where id=#{id};
    </update>

    <!--删除用户-->
    <update id="deleteUser" parameterType="domain.User">
        delete from user where id=#{id};
    </update>

    <!--根据id查询用户-->
    <select id="findById" parameterType="int" resultType="domain.User">/*resultType返回值是User类型，把结果封装到domain.User*/
        select *from user where id=#{id};
    </select>

    <!--根据名称模糊查询用户-->
    <select id="findByName" parameterType="string" resultType="domain.User">/*resultType返回值是User类型，把结果封装到domain.User*/
        select *from user where username like #{name};
    </select>

    <!--查询总用户数-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!--parameterType输入类型 即#{username},#{birthday},#{sex},#{address}里的属性为domain.User里的属性-->
    <!--此处user即为domain.Query里的属性（User user）即user对象，user.username即user对象的username属性，对应数据表username属性-->

    <!-- 根据queryVo条件查询用户-->
    <select id="findUserByVo" parameterType="domain.QueryVo" resultType="domain.User">
        select *from user where username like #{user.username};
    </select>
</mapper>